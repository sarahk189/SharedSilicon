@{
    var isContactPage = (ViewContext.RouteData.Values["Controller"].ToString() == "Contact" && ViewContext.RouteData.Values["Action"].ToString() == "Index");
}
@{
    var themeMode = Context.Request.Cookies["ThemeMode"] ?? "light";
    var isDark = (themeMode == "dark") ? true : false;
}
@inject SignInManager<UserEntity> _signInManager

<header class="@(isContactPage ? "contact-header" : "")">
    <div class="container">
        <a id="logo" asp-controller="Home" asp-action="Index">
            <img src="/images/@(isDark ? "siliconLogoDark.svg" : "siliconLogo.svg")" alt="logotype for Silicon">
        </a>
        <div id="menu" class="hide">
            <nav>
                <a class="menu-link" asp-controller="Home" asp-action="Index" asp-fragment="overview">Overview</a>
                <a class="menu-link" asp-controller="Home" asp-action="Index" asp-fragment="features">Features</a>
                <a class="menu-link" asp-controller="Contact" asp-action="Index" asp-fragment="contact">Contact</a>
                @if (_signInManager.IsSignedIn(User))
				{
					<a class="menu-link" asp-controller="Courses" asp-action="Index" asp-fragment="courses">Courses</a>
				}
                
            </nav>
        </div>

        <div class="btn-switch">
            <label>Light</label>
            <label class="switch" for="switch-mode">
                <input type="checkbox" id="switch-mode" checked="@isDark" />
                <div class="slider round"></div>
            </label>
            <label>Dark</label>
        </div>

        <div id="account-buttons" class="account-buttons hide">
            @if (_signInManager.IsSignedIn(User))
            {
                <a class="btn-gray" asp-controller="Account" asp-action="Details"><span>My Account</span></a>
                <a class="btn-theme" asp-controller="Auth" asp-action="SignOut"><i class="fa-regular fa-left-from-bracket"></i><span>Sign Out</span></a>
            }
            else
            {
                <a class="btn-gray" asp-controller="Auth" asp-action="SignIn"><i class="fa-regular fa-right-to-bracket"></i><span>Sign In</span></a>
                <a class="btn-theme" asp-controller="Auth" asp-action="SignUp"><i class="fa-regular fa-user"></i><span>Sign Up</span></a>
            }                           
        </div>




        @*  // stupid mobile menu begins here  *@
        <button onclick="toggleMenu()" class="btn-mobile">
            <i class="fa-regular fa-bars"></i>
        </button>

        <div id="mobile-menu" class="mobile-menu hide">
            <nav>
                <a class="menu-link" asp-controller="Home" asp-action="Index" asp-fragment="overview">Overview</a>
                <a class="menu-link" asp-controller="Home" asp-action="Index" asp-fragment="features">Features</a>
                <a class="menu-link" asp-controller="Contact" asp-action="Index" asp-fragment="contact">Contact</a>
                @if (_signInManager.IsSignedIn(User))
                {
                    <a class="menu-link" asp-controller="Courses" asp-action="Index" asp-fragment="courses">Courses</a>
                }
            </nav>
            <div id="mobile-account-buttons" class="account-buttons hide">
                @if (_signInManager.IsSignedIn(User))
                {
                    <a class="btn-gray" asp-controller="Account" asp-action="Details"><span>My Account</span></a>
                    <a class="btn-theme" asp-controller="Auth" asp-action="SignOut"><i class="fa-regular fa-left-from-bracket"></i><span>Sign Out</span></a>
                }
                else
                {
                    <a class="btn-gray" asp-controller="Auth" asp-action="SignIn"><i class="fa-regular fa-right-to-bracket"></i><span>Sign In</span></a>
                    <a class="btn-theme" asp-controller="Auth" asp-action="SignUp"><i class="fa-regular fa-user"></i><span>Sign Up</span></a>
                }
            </div>
        </div>
    </div>
</header>

@await Html.PartialAsync("_TogglePartial")

 ?                  